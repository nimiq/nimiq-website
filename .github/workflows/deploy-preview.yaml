name: Deploy Nuxt site to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 22 & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: nuxt

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create .env from Secrets
        run: |
          echo "NUXT_ALBATROSS_NODE_RPC_URL=${{ secrets.NUXT_ALBATROSS_NODE_RPC_URL }}" >> .env
          echo "NUXT_PUBLIC_VALIDATORS_API=${{ secrets.NUXT_PUBLIC_VALIDATORS_API }}" >> .env
          echo "NUXT_ALBATROSS_LIVEVIEW_PRIVATE_KEY=${{ secrets.NUXT_ALBATROSS_LIVEVIEW_PRIVATE_KEY }}" >> .env
          echo "NUXT_ALBATROSS_LIVEVIEW_TX_RECIPIENT=${{ secrets.NUXT_ALBATROSS_LIVEVIEW_TX_RECIPIENT }}" >> .env
          echo "NUXT_ALBATROSS_LIVEVIEW_TX_FEE=${{ secrets.NUXT_ALBATROSS_LIVEVIEW_TX_FEE }}" >> .env
          echo "NUXT_ALBATROSS_LIVEVIEW_TX_VALUE=${{ secrets.NUXT_ALBATROSS_LIVEVIEW_TX_VALUE }}" >> .env
          echo "NUXT_ZOHO_REQUEST_URL=${{ secrets.NUXT_ZOHO_REQUEST_URL }}" >> .env
          echo "NUXT_ZOHO_CLIENT_ID=${{ secrets.NUXT_ZOHO_CLIENT_ID }}" >> .env
          echo "NUXT_ZOHO_CLIENT_SECRET=${{ secrets.NUXT_ZOHO_CLIENT_SECRET }}" >> .env
          echo "NUXT_ZOHO_SCOPE=${{ secrets.NUXT_ZOHO_SCOPE }}" >> .env
          echo "NUXT_ZOHO_CODE=${{ secrets.NUXT_ZOHO_CODE }}" >> .env
          echo "NUXT_ZOHO_REFRESH_TOKEN=${{ secrets.NUXT_ZOHO_REFRESH_TOKEN }}" >> .env
          echo "NUXT_ZOHO_LISTKEY=${{ secrets.NUXT_ZOHO_LISTKEY }}" >> .env
          echo "NUXT_PUBLIC_API_ENDPOINT=${{ secrets.NUXT_PUBLIC_API_ENDPOINT }}" >> .env
          echo "PRISMIC_ACCESS_TOKEN=${{ secrets.PRISMIC_ACCESS_TOKEN }}" >> .env
          echo "NUXT_SITE_ENV=${{ secrets.NUXT_SITE_ENV }}" >> .env
          echo "NUXT_PUBLIC_SUPABASE_URL=${{ secrets.NUXT_PUBLIC_SUPABASE_URL }}" >> .env
          echo "NUXT_PUBLIC_SUPABASE_KEY=${{ secrets.NUXT_PUBLIC_SUPABASE_KEY }}" >> .env

      - name: Disable SSR via .nuxtrc
        run: |
          echo "ssr=false" > .nuxtrc

      - name: Static HTML export with Nuxt
        run: pnpm run generate

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
